
        <head>
          <meta charset="UTF-8">
        </head>
        <style>
        * {
          font-family: "Times New Roman";
        }

        td, th {
          padding: 3px 7px 2px 7px;
        }

        th {
          font-size: 1.1em;
          text-align: left;
          padding-top: 5px;
          padding-bottom: 4px;
        }
        </style>
        <body><h1>Simple TR sample program</h1>

<p>ATS-SDK version 7.0.0</p>

<p>Â© 2003-2015 Alazar Technologies, Inc.</p>

<h2>Introduction</h2>

<p>This sample program demonstrates how to make a simple
TR acquisition. The sample program is part of the
AlazarTech SDK, and is documented in the 'AlazarTech SDK Programmer's
Guide'.</p>

<h2>System requirements</h2>

<p>Python 2.7.8 and above, as well as 3.4.0 and above are supported for
running this sample program. In addition to the standard Python
installation, the NumPy library is required. This sample code is
tested with NumPy 1.8.2.</p>

<p>The AlazarTech ATS9440 drivers version 5.7.7
of later are required to run the sample program. They can be
downloaded from <a href="http://www.alazartech.com/support/downloads.htm">our
website</a>.</p>

<p>ATS9440 has a PCI bus interface capable of sustained data
transfers up to 1.6 GB/s.</p>

<h2>Getting started</h2>

<p>To get the most from an AlazarTech ATS9440 digitizer board, a
programmer should:</p>

<ol>
<li><p>Read the "ATS9440 User Guide". It provides an overview of
the digitizer board's hardware features, as well as it's
specifications.</p></li>
<li><p>Read the "AlazarTech SDK Programmer's Guide". It describes how to
program the digitizier hardware to make an acquisition, and to
transfer sample data into application buffers.</p></li>
</ol>

<h2>Dual-port AutoDMA acquisitions</h2>

<p>A dual-port AutoDMA acquisition allows a board to acquire to on-board
memory while, at the same time, transferring sample data from on-board
memory to application buffers.</p>

<p>AutoDMA acquisitions should be used when:</p>

<ul>
<li><p>The average data acquisition rate is less than the maximum PCIe bus
transfer rate.</p></li>
<li><p>An application cannot miss trigger events that occur while it
transfers data from host to memory, or re-arms a board for another
acquisition.</p></li>
<li><p>An application acquires more sample points or records per
acquisition than can be stored in on-board memory.</p></li>
</ul>

<p>Scanning applications such as ultrasonic testing, OCT, RADAR and LIDAR
imaging should use AutoDMA acquisitions.</p>

<p>An AutoDMA acquisition is divided into segments. AutoDMA hardware on a
board transfers sample data, one segment at a time, from on-board
memory to a buffer in host memory. There may be an unlimited number of
segments in an AutoDMA acquisition, so a board can be armed to make an
acquisition of infinite duration.</p>

<h2>Code overview</h2>

<p>The program is divided into three major parts:</p>

<h3>1. Obtain a board handle</h3>

<p>This code obtains a handle to a board specified by its system and
board identifiers. See section 2.1 <em>Addressing a board</em> of the
AlazarTech SDK Programmer's Guide for more information about using
board identifiers and handles.</p>

<h3>2. Configure the board</h3>

<p>The code in the <code>ConfigureBoard()</code> function calls AlazarTech API
functions to configure the time base, analog inputs, and trigger
system of the board specified by its handle.</p>

<p>An application must call these API functions as required before making
an acquisition. However, if the application continues to make other
acquisitions, it does not need to call these functions again unless a
parameter changes.</p>

<p>See section 2.2 <em>Configuring a board</em> of the AlazarTech SDK
Programmer's Guide for more information about how to configure a
board.</p>

<h3>3. Acquiring data</h3>

<p>It calls <code>AlazarPostAsyncBuffer()</code> to supply buffers to the board, and
<code>AlazarWaitAsyncBufferComplete()</code> to wait for the buffers to be filled
by the board.</p>

<h2>Modifying the sample program</h2>

<p>The ATS9440_TR.py file contains the code to configure a board, make an
acquisition, transfer sample data to application buffers and
optionally save sample data to file.</p>

<p>Acquisition parameters should be modified to suit the application. All
of the lines containing such parameters are labeled with <code>TODO</code>
comments. Search for there lines in the source files, and modify them
as required.</p>

<h2>Building the sample program</h2>

<p>Since Python is an interpreted language, the code sample does not have
to be compiled before being run. Simply make sure that you have all
the required libraries, then open a command prompt in the directory
where the code sample is and run <code>python ATS9440_TR.py</code>.</p>

<h2>Contact us</h2>

<p>If you have any questions or comments, or need assistance, contact us.</p>

<ul>
<li>Web:    <a href="http://www.alazartech.com">www.alazartech.com</a></li>
<li>Email:  <a href="mailto:support@alazartech.com">support@alazartech.com</a></li>
<li>Phone:  514-426-4899</li>
<li>Fax:    514-426-2723</li>
<li>Mail:   Alazar Technologies Inc.
       6600 Trans-Canada Highway, Suite 310
       Pointe-Claire, QC
       Canada H9R 4S2</li>
</ul>
</body>